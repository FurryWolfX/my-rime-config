# Rime schema
# encoding: utf-8

schema:
  schema_id: zrm2000_clover
  name: 自然码Pro
  version: "2.0"
  author:
    - wolfx
  description: 自然码Pro+英文词典+emoji
  dependencies:
    - clover
    - easy_en
    - zrm2000_helper

# 开关
# 鼠须管 0.16 后，用快捷键切换时的提示文字由 states 定义
# states: 方案选单显示的名称。可以注释掉，仍可以通过快捷键切换。
# reset: 默认状态。 注释掉后，切换窗口时不会重置到默认状态。
switches:
  - name: ascii_mode
    states: [ 中, Ａ ]
    reset: 0
  - name: ascii_punct # 中英标点
    states: [ ¥, $ ]
    reset: 0
  - name: traditionalization
    states: [ 简, 繁 ]
    reset: 0
  - name: emoji
    states: [ 💀, 😄 ]
    reset: 1
  - name: full_shape
    states: [ 半角, 全角 ]
    reset: 0

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - lua_translator@date_translator      # 时间、日期、星期
    - lua_translator@number_translator    # 数字、金额大写
    - table_translator@custom_phrase      # 自定义
    - table_translator@zrm2000_helper     # 自然码辅码
    - table_translator@easy_en            # 英语
  filters:
    - simplifier@emoji                    # Emoji
    - simplifier@traditionalize           # 简繁切换
    - uniquifier                          # 去重
    - lua_filter@is_in_user_dict

is_in_user_dict: true

# Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
date_translator:
  date: date       # 日期： 2022-11-29
  time: time       # 时间： 18:13
  week: week       # 星期： 星期二
  datetime: datetime   # ISO 8601： 2022-11-29T18:13:11+08:00
  timestamp: timestamp  # 时间戳： 1669716794

# Emoji
emoji:
  opencc_config: emoji.json
  option_name: emoji

# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json             # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none                          # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  excluded_types: [ reverse_lookup ]  # 不转换反查的内容

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA.,
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  delimiter: " '"
  algebra:
    # 纠错（易错的前后鼻音）
    - derive/en$/eng/
    - derive/eng$/en/
    - derive/in$/ing/
    - derive/ing$/in/
    # 纠错
    - derive/an$/ab/ # ab->an
    - derive/ming$/mt/ # mt->ming
    - derive/me$/mw/ # mw->me
    # 自然码
    - erase/^xx$/
    - derive/^([jqxy])u$/$1v/
    - derive/^([aoe])([ioun])$/$1$1$2/
    - xform/^([aoe])(ng)?$/$1$1$2/
    - xform/iu$/Q/
    - xform/[iu]a$/W/
    - xform/[uv]an$/R/
    - xform/[uv]e$/T/
    - xform/ing$|uai$/Y/
    - xform/^sh/U/
    - xform/^ch/I/
    - xform/^zh/V/
    - xform/uo$/O/
    - xform/[uv]n$/P/
    - xform/i?ong$/S/
    - xform/[iu]ang$/D/
    - xform/(.)en$/$1F/
    - xform/(.)eng$/$1G/
    - xform/(.)ang$/$1H/
    - xform/ian$/M/
    - xform/(.)an$/$1J/
    - xform/iao$/C/
    - xform/(.)ao$/$1K/
    - xform/(.)ai$/$1L/
    - xform/(.)ei$/$1Z/
    - xform/ie$/X/
    - xform/ui$/V/
    - xform/(.)ou$/$1B/
    - xform/in$/N/
    - xlit/QWRTYUIOPSDFGHMJCKLZXVBN/qwrtyuiopsdfghmjcklzxvbn/
    #- abbrev/^(.).+$/$1/

translator:
  dictionary: clover
  enable_user_dict: true
  prism: zrm2000_clover

easy_en:
  dictionary: easy_en
  enable_completion: true
  enable_sentence: false
  initial_quality: 0

zrm2000_helper:
  dictionary: zrm2000_helper
  enable_sentence: false
  enable_user_dict: false
  max_phrase_length: 8

custom_phrase:
  dictionary: ""
  user_dict: dicts/cn_py/custom_phrase
  db_class: tabledb
  enable_sentence: false
  enable_completion: false
  initial_quality: 1

# 自定义码表 END

punctuator:
  import_preset: default

key_binder:
  import_preset: default
  bindings:
    - { when: has_menu, accept: bracketleft, send: Page_Up } # 前翻页键 "["
    - { when: has_menu, accept: bracketright, send: Page_Down } # 后翻页键 "]"
    - { when: has_menu, accept: comma, send: comma } # 禁用前翻页键 "."
    - { when: has_menu, accept: period, send: period } # 禁用后翻页键 ","

recognizer:
  import_preset: default
  patterns:  # 再增加方案专有的：
    number: "^R[0-9]+[.]?[0-9]*"      # 响应 number_translator